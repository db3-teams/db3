//
//
// rtstore_base.proto
// Copyright (C) 2022 rtstore.io Author imotai <codego.me@gmail.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


syntax = "proto3";

package rtstore_base_proto;

// the all types supported in rtstore
enum RTStoreType {
    kBool = 0;
    kSmallInt = 2;
    kInt = 3;
    kBigInt = 4;
    kFloat = 5;
    kDouble = 6;
    kDate = 9;
    //timestamp type
    kTimestamp_Second = 11;
    kTimestamp_MillsSecond = 12;
    kTimestamp_MicrosSecond = 13;
    // string type
    kString_Utf8 = 21;
    kJson = 22;
}

message RTStorePartitionDesc {
    repeated string columns = 2;
    int32 partition_count = 3;

    // range merge and split strategy
    int32 split_record_count = 5;
    int32 merge_record_count = 6;
    string range_column = 7;
}

message RTStoreColumnDesc {
    string name = 1;
    RTStoreType ctype = 2;
    bool null_allowed = 3;
    bytes default_value = 4;
}

message RTStoreSchemaDesc {
    repeated RTStoreColumnDesc columns = 1;
    int32 version = 2;
}

message RTStoreTableDesc {
    // the table name is like test.dev.table1
    repeated string name = 1;
    RTStoreSchemaDesc schema = 2;
    RTStorePartitionDesc partition_desc = 3;
}

enum RTStoreStatusType {
    kOk = 0;
    // table related error
    kTableNameDuplicatedError = 11;
    kTableNotFoundError = 12;
}

message RTStoreStatus {
    RTStoreStatusType stype = 1;
    string msg = 2;
}
